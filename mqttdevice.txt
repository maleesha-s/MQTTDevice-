include <ESP8266WiFi.h>
#include <PubSubClient.h>
 
const char* ssid = "asdf"; // Enter your WiFi name
const char* password =  "123654"; // Enter WiFi password
const char* mqttServer = "broker.emqx.io";
const int mqttPort = 1883;
int distance;
char msg[50];
WiFiClient espClient;
PubSubClient client(espClient);
 const int trigPin = D5; 
const int echoPin = D6; 

long duration;
void setup() {
 
  Serial.begin(9600);
 pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
 pinMode(echoPin, INPUT); // Sets the echoPin as an Input
 
 
}
 
void callback(char* topic, byte* payload, unsigned int length) {
 
  Serial.print("Message arrived in topic: ");
  Serial.println(topic);
 
  Serial.print("Message:");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
 
  Serial.println();
  Serial.println("-----------------------");
 
}
 
void loop() {
  // Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);

// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);

// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);
delay(5000);
 WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("Connecting to WiFi..");
  }
  Serial.println("Connected to the WiFi network");
 
  client.setServer(mqttServer, mqttPort);
  client.setCallback(callback);
 
  while (!client.connected()) {
    Serial.println("Connecting to MQTT...");
 
    if (client.connect("esp8266-client-maleesha-e514sde-7845", "", "" )) {
 
      Serial.println("connected");  
 
    } else {
 
      Serial.print("failed with state ");
      Serial.print(client.state());
      delay(1000);
    }
  }
 
char buffer[12];
dtostrf(distance, 7, 3, buffer);
snprintf (msg, 50, buffer);
 
  client.publish("esp/test", msg); //Topic name
  client.subscribe("esp/test");
}
